stages:
  - build
  - deploy

variables:
  DEV_ENV: http://172.16.8.19:3000
  STAGING_ENV: http://172.16.8.15:3000
  PROD_ENV: http://172.16.8.21:3000
  DEV_SERVER_HOST: 172.16.8.19
  STAGING_SERVER_HOST: 172.16.8.15
  PROD_SERVER_HOST: 172.16.8.21
  IMAGE_NAME_FRONTEND: $CI_REGISTRY_IMAGE/microservice/frontend
  IMAGE_NAME_PRODUCTS: $CI_REGISTRY_IMAGE/microservice/products
  IMAGE_NAME_SHOPPINGCART: $CI_REGISTRY_IMAGE/microservice/shopping-cart

build_frontend:
  stage: build
  tags:
    - shell
  before_script:
    - cd frontend    #because we must cd to this folder if we want build image from frontend
    - export PACKAGE_VERSION=$(cat package.json | jq -r .version)
    - export TAG_VERSION=$PACKAGE_VERSION.$CI_PIPELINE_IID
    - echo "TAG_VERSION=$TAG_VERSION" >> front.env
  script:
    - docker build . -t $IMAGE_NAME_FRONTEND:$TAG_VERSION
  artifacts:
    reports:
      dotenv: frontend/front.env
  only:
    changes:
      - "frontend/**/*"      #if we change for example another service in microservice it's doesn't run because we say if changes in frontend only we can run it 


push_frontend:
  stage: build
  tags:
    - shell
  needs:
    - build_frontend
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker push $IMAGE_NAME_FRONTEND:$TAG_VERSION
  only:
    changes:
      - "frontend/**/*"


build_products:
  stage: build
  tags:
    - shell
  before_script:
    - cd products    #because we must cd to this folder if we want build image from this folder
    - export PACKAGE_VERSION=$(cat package.json | jq -r .version)
    - export TAG_VERSION=$PACKAGE_VERSION.$CI_PIPELINE_IID
    - echo "TAG_VERSION=$TAG_VERSION" >> products.env
  script:
    - docker build . -t $IMAGE_NAME_PRODUCTS:$TAG_VERSION
  artifacts:
    reports:
      dotenv: products/products.env 
  only:
    changes:
      - "products/**/*"

push_product:
  stage: build
  needs:
    - build_products
  tags:
    - shell
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker push $IMAGE_NAME_PRODUCTS:$TAG_VERSION
  only:
    changes:
      - "products/**/*"

build_shopping-cart:
  stage: build
  tags:
    - shell
  before_script:
    - cd shopping-cart    #because we must cd to this folder if we want build image from this folder
    - export PACKAGE_VERSION=$(cat package.json | jq -r .version)
    - export TAG_VERSION=$PACKAGE_VERSION.$CI_PIPELINE_IID
    - echo "TAG_VERSION=$TAG_VERSION" >> shopping-cart.env
  script:
    - docker build . -t $IMAGE_NAME_SHOPPINGCART:$TAG_VERSION
  artifacts:
    reports:
      dotenv: shopping-cart/shopping-cart.env
  only:
    changes:
      - "shopping-cart/**/*"

push_shopping-cart:
  stage: build
  needs:
    - build_shopping-cart
  tags:
    - shell
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker push $IMAGE_NAME_SHOPPINGCART:$TAG_VERSION
  only:
    changes:
      - "shopping-cart/**/*"

.deploy_template:
  tags:
    - shell
  variables:
    SERVER_HOST: ""
    APP_PORT: ""
    IMAGE_NAME: ""
  before_script:
    - echo $SSH_PRIVATE_KEY >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - scp -o StrictHostKeyChecking=no ./docker-compose.yaml aslan@$SERVER_HOST:/home/aslan
  script:
    - ssh -o StrictHostKeyChecking=no aslan@$SERVER_HOST "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        export COMPOSE_PROJECT_NAME=$DEPLOY_ENV &&
        export DOCKER_IMAGE_NAME=$IMAGE_NAME &&
        export DOCKER_IMAGE_TAG=$TAG_VERSION &&
        export DOCKER_APP_PORT=$APP_PORT &&
        docker network create microservice || true &&    
        docker-compose down &&
        docker-compose up -d"

deploy_frontend:
  stage: deploy
  extends: .deploy_template
  variables:
    SERVER_HOST: $DEV_SERVER_HOST
    APP_PORT: 3000
    DEPLOY_ENV:  frontend
    IMAGE_NAME: $IMAGE_NAME_FRONTEND
  only:
    changes:
      - "frontend/**/*"

deploy_products:
  stage: deploy
  extends: .deploy_template
  variables:
    SERVER_HOST: $DEV_SERVER_HOST
    APP_PORT: 3001
    DEPLOY_ENV: products
    IMAGE_NAME: $IMAGE_NAME_PRODUCTS
  only:
    changes:
      - "products/**/*"

deploy_shopping-cart:
  stage: deploy
  extends: .deploy_template
  variables:
    SERVER_HOST: $DEV_SERVER_HOST
    APP_PORT: 3002
    DEPLOY_ENV: shopping-cart
    IMAGE_NAME: $IMAGE_NAME_SHOPPINGCART
  only:
    changes:
      - "shopping-cart/**/*"

